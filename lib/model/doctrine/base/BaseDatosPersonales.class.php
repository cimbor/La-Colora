<?php

/**
 * BaseDatosPersonales
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idDatosPersonales
 * @property string $nombre
 * @property string $apellido1
 * @property string $apellido2
 * @property string $nacionalidad
 * @property string $dni_passport
 * @property string $calle
 * @property string $num_y_piso
 * @property string $Localidad
 * @property string $Provincia
 * @property integer $telefono
 * @property string $email
 * @property Doctrine_Collection $Cliente
 * @property Doctrine_Collection $Empleado
 * @property Doctrine_Collection $Reserva
 * 
 * @method integer             getIdDatosPersonales() Returns the current record's "idDatosPersonales" value
 * @method string              getNombre()            Returns the current record's "nombre" value
 * @method string              getApellido1()         Returns the current record's "apellido1" value
 * @method string              getApellido2()         Returns the current record's "apellido2" value
 * @method string              getNacionalidad()      Returns the current record's "nacionalidad" value
 * @method string              getDniPassport()       Returns the current record's "dni_passport" value
 * @method string              getCalle()             Returns the current record's "calle" value
 * @method string              getNumYPiso()          Returns the current record's "num_y_piso" value
 * @method string              getLocalidad()         Returns the current record's "Localidad" value
 * @method string              getProvincia()         Returns the current record's "Provincia" value
 * @method integer             getTelefono()          Returns the current record's "telefono" value
 * @method string              getEmail()             Returns the current record's "email" value
 * @method Doctrine_Collection getCliente()           Returns the current record's "Cliente" collection
 * @method Doctrine_Collection getEmpleado()          Returns the current record's "Empleado" collection
 * @method Doctrine_Collection getReserva()           Returns the current record's "Reserva" collection
 * @method DatosPersonales     setIdDatosPersonales() Sets the current record's "idDatosPersonales" value
 * @method DatosPersonales     setNombre()            Sets the current record's "nombre" value
 * @method DatosPersonales     setApellido1()         Sets the current record's "apellido1" value
 * @method DatosPersonales     setApellido2()         Sets the current record's "apellido2" value
 * @method DatosPersonales     setNacionalidad()      Sets the current record's "nacionalidad" value
 * @method DatosPersonales     setDniPassport()       Sets the current record's "dni_passport" value
 * @method DatosPersonales     setCalle()             Sets the current record's "calle" value
 * @method DatosPersonales     setNumYPiso()          Sets the current record's "num_y_piso" value
 * @method DatosPersonales     setLocalidad()         Sets the current record's "Localidad" value
 * @method DatosPersonales     setProvincia()         Sets the current record's "Provincia" value
 * @method DatosPersonales     setTelefono()          Sets the current record's "telefono" value
 * @method DatosPersonales     setEmail()             Sets the current record's "email" value
 * @method DatosPersonales     setCliente()           Sets the current record's "Cliente" collection
 * @method DatosPersonales     setEmpleado()          Sets the current record's "Empleado" collection
 * @method DatosPersonales     setReserva()           Sets the current record's "Reserva" collection
 * 
 * @package    LaColora
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDatosPersonales extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('colora_datospersonales');
        $this->hasColumn('idDatosPersonales', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('nombre', 'string', 45, array(
             'type' => 'string',
             'notblank' => true,
             'length' => 45,
             ));
        $this->hasColumn('apellido1', 'string', 45, array(
             'type' => 'string',
             'notblank' => true,
             'length' => 45,
             ));
        $this->hasColumn('apellido2', 'string', 45, array(
             'type' => 'string',
             'notblank' => true,
             'length' => 45,
             ));
        $this->hasColumn('nacionalidad', 'string', 2, array(
             'type' => 'string',
             'country' => true,
             'default' => 'es',
             'length' => 2,
             ));
        $this->hasColumn('dni_passport', 'string', 12, array(
             'type' => 'string',
             'notblank' => true,
             'length' => 12,
             ));
        $this->hasColumn('calle', 'string', 45, array(
             'type' => 'string',
             'notblank' => true,
             'length' => 45,
             ));
        $this->hasColumn('num_y_piso', 'string', 10, array(
             'type' => 'string',
             'notblank' => true,
             'length' => 10,
             ));
        $this->hasColumn('Localidad', 'string', 45, array(
             'type' => 'string',
             'notblank' => true,
             'length' => 45,
             ));
        $this->hasColumn('Provincia', 'string', 45, array(
             'type' => 'string',
             'notblank' => 'yes',
             'length' => 45,
             ));
        $this->hasColumn('telefono', 'integer', null, array(
             'type' => 'integer',
             'minlength' => 9,
             'notnull' => 'yes',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'email' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Cliente', array(
             'local' => 'idDatosPersonales',
             'foreign' => 'datosCliente'));

        $this->hasMany('Empleado', array(
             'local' => 'idDatosPersonales',
             'foreign' => 'datosEmpleado'));

        $this->hasMany('Reserva', array(
             'local' => 'idDatosPersonales',
             'foreign' => 'realizada_por'));
    }
}