<?php

/**
 * BaseAlojamiento
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idAlojamiento
 * @property string $nombre
 * @property decimal $precioBase
 * @property integer $subalojamiento
 * @property integer $minPlazas
 * @property integer $maxPlazas
 * @property integer $idEmpresa
 * @property Doctrine_Collection $Reservados
 * @property Alojamiento $Parientes
 * @property Empresa $Empresa
 * @property Doctrine_Collection $SubAlojamientos
 * @property Doctrine_Collection $Tarifa
 * 
 * @method integer             getIdAlojamiento()   Returns the current record's "idAlojamiento" value
 * @method string              getNombre()          Returns the current record's "nombre" value
 * @method decimal             getPrecioBase()      Returns the current record's "precioBase" value
 * @method integer             getSubalojamiento()  Returns the current record's "subalojamiento" value
 * @method integer             getMinPlazas()       Returns the current record's "minPlazas" value
 * @method integer             getMaxPlazas()       Returns the current record's "maxPlazas" value
 * @method integer             getIdEmpresa()       Returns the current record's "idEmpresa" value
 * @method Doctrine_Collection getReservados()      Returns the current record's "Reservados" collection
 * @method Alojamiento         getParientes()       Returns the current record's "Parientes" value
 * @method Empresa             getEmpresa()         Returns the current record's "Empresa" value
 * @method Doctrine_Collection getSubAlojamientos() Returns the current record's "SubAlojamientos" collection
 * @method Doctrine_Collection getTarifa()          Returns the current record's "Tarifa" collection
 * @method Alojamiento         setIdAlojamiento()   Sets the current record's "idAlojamiento" value
 * @method Alojamiento         setNombre()          Sets the current record's "nombre" value
 * @method Alojamiento         setPrecioBase()      Sets the current record's "precioBase" value
 * @method Alojamiento         setSubalojamiento()  Sets the current record's "subalojamiento" value
 * @method Alojamiento         setMinPlazas()       Sets the current record's "minPlazas" value
 * @method Alojamiento         setMaxPlazas()       Sets the current record's "maxPlazas" value
 * @method Alojamiento         setIdEmpresa()       Sets the current record's "idEmpresa" value
 * @method Alojamiento         setReservados()      Sets the current record's "Reservados" collection
 * @method Alojamiento         setParientes()       Sets the current record's "Parientes" value
 * @method Alojamiento         setEmpresa()         Sets the current record's "Empresa" value
 * @method Alojamiento         setSubAlojamientos() Sets the current record's "SubAlojamientos" collection
 * @method Alojamiento         setTarifa()          Sets the current record's "Tarifa" collection
 * 
 * @package    LaColora
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlojamiento extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('colora_alojamiento');
        $this->hasColumn('idAlojamiento', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('nombre', 'string', 45, array(
             'type' => 'string',
             'minlength' => 5,
             'length' => 45,
             ));
        $this->hasColumn('precioBase', 'decimal', 6, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 6,
             ));
        $this->hasColumn('subalojamiento', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('minPlazas', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('maxPlazas', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('idEmpresa', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Reserva as Reservados', array(
             'refClass' => 'ReservaTieneAlojamiento',
             'local' => 'idAlojamiento',
             'foreign' => 'idReserva'));

        $this->hasOne('Alojamiento as Parientes', array(
             'local' => 'subalojamiento',
             'foreign' => 'idAlojamiento'));

        $this->hasOne('Empresa', array(
             'local' => 'idEmpresa',
             'foreign' => 'idEmpresa',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Alojamiento as SubAlojamientos', array(
             'local' => 'idAlojamiento',
             'foreign' => 'subalojamiento'));

        $this->hasMany('Tarifa', array(
             'local' => 'idAlojamiento',
             'foreign' => 'idAlojamiento'));
    }
}