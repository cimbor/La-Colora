<?php

/**
 * BaseFactura
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idFactura
 * @property integer $idEmpresa
 * @property timestamp $fecha
 * @property integer $idReserva
 * @property string $medioPago
 * @property integer $numTarjeta
 * @property string $tipoTarjeta
 * @property date $fechaCadTarjeta
 * @property Empresa $Empresa
 * @property Reserva $Reserva
 * 
 * @method integer   getIdFactura()       Returns the current record's "idFactura" value
 * @method integer   getIdEmpresa()       Returns the current record's "idEmpresa" value
 * @method timestamp getFecha()           Returns the current record's "fecha" value
 * @method integer   getIdReserva()       Returns the current record's "idReserva" value
 * @method string    getMedioPago()       Returns the current record's "medioPago" value
 * @method integer   getNumTarjeta()      Returns the current record's "numTarjeta" value
 * @method string    getTipoTarjeta()     Returns the current record's "tipoTarjeta" value
 * @method date      getFechaCadTarjeta() Returns the current record's "fechaCadTarjeta" value
 * @method Empresa   getEmpresa()         Returns the current record's "Empresa" value
 * @method Reserva   getReserva()         Returns the current record's "Reserva" value
 * @method Factura   setIdFactura()       Sets the current record's "idFactura" value
 * @method Factura   setIdEmpresa()       Sets the current record's "idEmpresa" value
 * @method Factura   setFecha()           Sets the current record's "fecha" value
 * @method Factura   setIdReserva()       Sets the current record's "idReserva" value
 * @method Factura   setMedioPago()       Sets the current record's "medioPago" value
 * @method Factura   setNumTarjeta()      Sets the current record's "numTarjeta" value
 * @method Factura   setTipoTarjeta()     Sets the current record's "tipoTarjeta" value
 * @method Factura   setFechaCadTarjeta() Sets the current record's "fechaCadTarjeta" value
 * @method Factura   setEmpresa()         Sets the current record's "Empresa" value
 * @method Factura   setReserva()         Sets the current record's "Reserva" value
 * 
 * @package    LaColora
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFactura extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('colora_factura');
        $this->hasColumn('idFactura', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('idEmpresa', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('fecha', 'timestamp', null, array(
             'type' => 'timestamp',
             'past' => true,
             'notnull' => true,
             ));
        $this->hasColumn('idReserva', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('medioPago', 'string', 1, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('numTarjeta', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('tipoTarjeta', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 15,
             ));
        $this->hasColumn('fechaCadTarjeta', 'date', null, array(
             'type' => 'date',
             'future' => 'yes',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'idEmpresa',
             'foreign' => 'idEmpresa',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Reserva', array(
             'local' => 'idReserva',
             'foreign' => 'idReserva',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}